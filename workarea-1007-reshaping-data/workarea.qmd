---
title: "Reshaping Data"
---

## Load Packages
```{r}
library(tidyverse)
```

## Load Data
```{r}
penguins <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')
head(penguins)
```

Unit of Observation: Each row holds information about **a penguin**

## Example 1

Count of male and female by species

```{r}
# Using count()
penguins |> 
  count(sex, species)
```

```{r}
# Using group_by() and summarize()
penguins |> 
  group_by(sex, species) |> 
  summarise(count = n())
```


Proportion of males and females by species

```{r}
penguins |> 
  group_by(species, sex) |> 
  summarise(count = n()) |> 
  mutate(perc = count/sum(count))
```

Unit of Observation: Each row holds information about **a sex of a specie**

## Example 2
```{r}
penguins_avg <- penguins |> 
  group_by(species, sex) |> 
  summarise(avg_body_mass_g = mean(body_mass_g, na.rm = TRUE)) |> 
  na.omit()

penguins_avg
```

## Example 5
```{r}
penguins_avg_wide <- penguins_avg |> 
  pivot_wider(names_from = sex, values_from = avg_body_mass_g) |> 
  mutate(diff = female - male)
penguins_avg_wide
```

Unit of Observation: Each row holds information about **a specie**

## Example 6
```{r}
penguins_avg_long <- penguins_avg_wide |> 
  pivot_longer(cols = c(male, female), names_to = "sex", values_to = "avg_body_mass_g")
  # OR using exclude
  # pivot_longer(cols = -c(species, diff), names_to = "sex", values_to = "avg_body_mass_g")


penguins_avg_long
```

Unit of Observation: Each row holds information about **a sex of a specie**

## Example 7
```{r}
food <- data.frame(
  customer = rep(c("A", "B"), each = 3),
  restaurant = rep(c("Shish", "FrenchMeadow", "DunnBros"), 2),
  order = c("falafel", "salad", "coffee", "baklava", "pastry", "tea")
)
food
```

Unit of Observation: Each row holds information about **a customer in a restaurant**

```{r}
food |> 
  pivot_wider(names_from = restaurant, values_from = order)
```

Unit of Observation: Each row holds information about **a customer**

```{r}
more_food <- data.frame(
  customer = c("C", "D"),
  Shish = c("coffee", "maza"),
  FrenchMeadow = c("soup", "sandwich"),
  DunnBros = c("cookie", "coffee")
)
more_food
```

Unit of Observation: Each row holds information about **a customer**

```{r}
more_food |> 
  pivot_longer(cols = -customer, names_to = "resturant", values_to = "order")
```
Unit of Observation: Each row holds information about **a customer in a restaurant**


## Exercise 1
```{r}
sleep_wide <- read.csv("https://mac-stat.github.io/data/sleep_wide.csv")
head(sleep_wide)
```

### Part a

Unit of Observation: Each row holds information about **a subject**


### Part b
```{r}
sleep_wide |> 
  pivot_longer(cols = -Subject, names_prefix = "day_", names_to = "day", values_to = "reaction_time") |> 
  ggplot(mapping = aes(x = as.numeric(day), y = reaction_time, color = as.factor(Subject))) +
  geom_line()
```

## Exercise 5
```{r}
# Load data
library(tidyr)
data("billboard")

# Check it out
head(billboard)
```

### Part a

```{r}
billboard |> 
  ggplot(mapping = aes(x = wk1, y = wk2)) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1)
```

### Part b
```{r}
billboard |> 
  mutate(wk2towk1 = wk2-wk1) |> 
  filter(wk2towk1 > 0)
```

### Part c
```{r}
billboard |> 
  filter(month(date.entered) == 11, day(date.entered) == 6, year(date.entered) == 1999) |> 
  select(-track, -date.entered) |> 
  pivot_longer(cols = starts_with("wk"),
               names_prefix = "wk",
               names_to = "wk",
               values_to = "rating") |> 
  mutate(wk = as.numeric(wk)) |> 
  ggplot(mapping = aes(x = wk, y = rating, color = artist)) +
  geom_line()
```

### Exercise 6
```{r}
library(fivethirtyeight)
data("daily_show_guests")
daily <- daily_show_guests
daily
```

```{r}
daily |> 
  select(year, raw_guest_list) |> 
  group_by(raw_guest_list, year) |> 
  summarise(n = n()) |> 
  mutate(total = sum(n)) |> 
  arrange(desc(total)) |> 
  pivot_wider(names_from = year, values_from = n, values_fill = 0) |> 
  head(15)
```

### Part C
```{r}
daily |> 
  count(group)
```

```{r}
daily |> 
  mutate(broad_group = case_when(
    group %in% c("Acting", "Athletics", "Comedy", "Musician") ~ "Acting, Comedy & Musician",
    group %in% c("Media", "media", "Science", "Academic", "Consultant", "Clergy") ~ "Media",
    group %in% c("Politician", "Political Aide", "Government", "Military", "Business", "Advocacy") ~ "Government and Politics",
    .default = NA
  )) |> 
  filter(!is.na(broad_group)) |> 
  select(year, broad_group) |> 
  group_by(year, broad_group) |> 
  summarize(n = n()) |> 
  ggplot(mapping = aes(x = year, y = n, color = broad_group)) +
  geom_line()
```

